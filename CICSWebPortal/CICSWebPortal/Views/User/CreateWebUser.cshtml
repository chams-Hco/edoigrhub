@model CICSWebPortal.ViewModels.WebUserViewModel
@{
   
    Layout = null;
    var user = (CICSWebPortal.ViewModels.UserDashBoardViewModel)Session["LoggedInUser"];
    var Status = (bool)ViewBag.Status;
    var client = (CICSWebPortal.Models.Client)ViewBag.Client;
}





<div class="modal-content">
    @{
        if (Status == false)
        {
            <div class="alert alert-danger">
                <span> @ViewBag.Message</span>
            </div>
        }
        else
        {

            using(Html.BeginForm("CreateWebUser", "User", FormMethod.Post, new
            {
                @class = "form-horizontal",
                role = "form",
                @id = "regForm",

            }))
            {
                @Html.AntiForgeryToken()

                <div class="modal-header">
                    <button type="button" class="close" data-dismiss="modal" aria-label="Close"><span aria-hidden="true">&times;</span></button>
                    <h4 class="modal-title" id="myModalLabel">Add New User</h4>
                </div>
                <div class="modal-body">
                    @Html.ValidationSummary(true, "", new { @class = "text-danger" })
                    <div class="form-group">
                        <label class="col-sm-3 control-label"> Client </label>

                        <div class="col-sm-8">
                            @Html.DropDownListFor(m => m.SelectedClientId, Model.Clients, "Please select...", new { @class = "form-control", required = true })
                        </div>
                    </div>
                    <div class="form-group">
                        <label class="col-sm-3 control-label"> Agent </label>
                        <div class="col-sm-8">
                            @Html.DropDownListFor(m => m.SelectedAgentId, Model.Agents, "Please select...", new { @class = "form-control", required = true })
                        </div>
                    </div>
                    <div class="form-group">
                        @Html.LabelFor(model => model.Name, htmlAttributes: new { @class = "col-sm-3 control-label" })
                        <div class="col-sm-8">
                            @Html.EditorFor(model => model.Name, new { htmlAttributes = new { @class = "form-control", required = true } })
                            @Html.ValidationMessageFor(model => model.Name, "", new { @class = "text-danger" })
                        </div>
                    </div>
                    <div class="form-group">
                        @Html.LabelFor(model => model.Email, htmlAttributes: new { @class = "col-sm-3 control-label" })
                        <div class="col-sm-8">
                            @Html.EditorFor(model => model.Email, new { htmlAttributes = new { @class = "form-control", required = true } })
                            @Html.ValidationMessageFor(model => model.Email, "", new { @class = "text-danger" })
                        </div>
                    </div>
                    <div class="form-group">
                        @Html.LabelFor(model => model.Password, htmlAttributes: new { @class = "col-sm-3 control-label" })
                        <div class="col-sm-8">
                            @Html.PasswordFor(model => model.Password, new { htmlAttributes = new { @class = "form-control", required = true } })
                            @Html.ValidationMessageFor(model => model.Password, "", new { @class = "text-danger" })
                        </div>
                    </div>
                    <div class="form-group">
                        @Html.LabelFor(model => model.RePassword, htmlAttributes: new { @class = "col-sm-3 control-label" })
                        <div class="col-sm-8">
                            @Html.PasswordFor(model => model.RePassword, new { htmlAttributes = new { @class = "form-control", required = true } })
                            @Html.ValidationMessageFor(model => model.RePassword, "", new { @class = "text-danger" })
                        </div>
                    </div>
                    <div class="form-group">
                        @Html.LabelFor(model => model.Address, htmlAttributes: new { @class = "col-sm-3 control-label" })
                        <div class="col-sm-8">
                            @Html.EditorFor(model => model.Address, new { htmlAttributes = new { @class = "form-control", required = false } })
                            @Html.ValidationMessageFor(model => model.Address, "", new { @class = "text-danger" })
                        </div>
                    </div>

                    <div class="form-group">
                        @Html.LabelFor(model => model.Phone, htmlAttributes: new { @class = "col-sm-3 control-label" })
                        <div class="col-sm-8">
                            @Html.EditorFor(model => model.Phone, new { htmlAttributes = new { @class = "form-control", required = true } })
                            @Html.ValidationMessageFor(model => model.Phone, "", new { @class = "text-danger" })
                        </div>
                    </div>



                </div>
                <div class="modal-footer">
                    <button type="button" class="btn btn-default" data-dismiss="modal">Close</button>
                    <button type="submit" class="btn btn-primary">Save</button>
                </div>
            }
        }
    }
</div>




